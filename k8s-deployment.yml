---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: admiral-reader
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admiral-reader
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admiral-reader
subjects:
- kind: ServiceAccount
  name: admiral-reader
  namespace: default
roleRef:
  kind: ClusterRole
  name: admiral-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-api-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-api-server
  template:
    metadata:
      labels:
        app: go-api-server
    spec:
      serviceAccountName: admiral-reader
      containers:
      - name: go-api-server
        image: go-k8s
        imagePullPolicy: Never
        ports:
         - containerPort: 8080
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 8080
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        #   periodSeconds: 15
        #   timeoutSeconds: 5
        # readinessProbe:
        #   httpGet:
        #     path: /readiness
        #     port: 8080
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 1
---
apiVersion: v1
kind: Service                    # Type of kubernetes resource
metadata:
  name: go-api-server-service   # Name of the resource
spec:
  type: LoadBalancer                 # A port is opened on each node in your cluster via Kube proxy.
  ports:                         # Take incoming HTTP requests on port 9090 and forward them to the targetPort of 8080
  - name: http
    port: 9090
    targetPort: 8080
  selector:
    app: go-api-server
